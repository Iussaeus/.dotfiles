#!/usr/bin/env bash

# WARN: Dont forget to set the Exec flags to: "{file}" "{line},{col}" "{project}"

term_exec="kitty"
nvim_exec="nvim"
server_path="/tmp/nvim.pipe"

# Note: time in seconds
server_startup_delay=0.5

session_name=$(basename $3 | tr '.' '_')
tmux_found=false

check_kitty_children() {
	kitty_pids=$(pgrep kitty)

	if [ -z "$kitty_pids" ]; then
		return
	fi


	for pid in $kitty_pids; do
		child_processes=$(pgrep -P "$pid")

		for child_pid in $child_processes; do
			if ps -p "$child_pid" -o comm= | grep -q "tmux"; then
				tmux_found=true
				break
			fi
		done
	done
}

start_server() {
	tmux & 
	tmux new-session -d -s "$session_name" -c "$3"
	tmux new-window -t "$session_name:1" "$nvim_exec --listen $server_path '$3'"
	tmux select-window -t 1
	$nvim_exec --server $server_path --remote-send ":cd $3@<CR>"

	$nvim_exec --server $server_path --remote-send ":e $1@<CR>"
	$nvim_exec --server $server_path --remote-send ":call cursor($2)@<CR>"
}

open_file_in_server() {
	$nvim_exec --server $server_path --remote-send ":e $1@<CR>"
	$nvim_exec --server $server_path --remote-send ":call cursor($2)@<CR>"

	check_kitty_children

	if  ! $tmux_found; then 
		$term_exec --title "Godot" -e tmux attach -t "$session_name"
	fi
}

if ! [ -e "$server_path" ]; then
	start_server "$1" "$2" "$3" &
	sleep $server_startup_delay 
fi

open_file_in_server "$1" "$2"
